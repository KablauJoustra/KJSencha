<script type="text/javascript"><?php
$this->headScript()->captureStart();
echo PHP_EOL;

/* @var $bootstrap \KJSencha\Frontend\Bootstrap */
if($bootstrap->getVariables()) {
    foreach ($bootstrap->getVariables() as $key => $value) {
        echo $key . '=' . json_encode($value) . ';' . PHP_EOL;
    }
}

if ($namespaces = $bootstrap->getPaths()) {
    // Create relative paths for paths that have no trailing slash
    foreach ($namespaces as $namespace => $path) {
        if ($path[0] !== '/') {
            $namespaces[$namespace] = $this->basePath($path);
        }
    }

    echo 'Ext.Loader.setConfig(' . json_encode(array(
        'enabled'  => true,
        'paths'    => $namespaces,
    )) . ');' . PHP_EOL;
}

if ($requires = $bootstrap->getRequires()) {
    echo 'Ext.syncRequire(' . json_encode($requires) . ');' . PHP_EOL;
}

if ($directApi = $bootstrap->getDirectApi()) {
    foreach ($bootstrap->getModules() as $module => $options) {
        echo $directApi->getModule($module)->buildRemotingProvider($options);
    }
}

echo PHP_EOL;
$this->headScript()->captureEnd();
?></script>